# https://python-poetry.org/docs/pyproject/

# PROJECT

[tool.poetry]
name = "bikes"
version = "0.6.0"
description = "Predict the number of bikes available."
documentation = "https://fmind.github.io/mlops-python-package/"
repository = "https://github.com/fmind/mlops-python-package"
authors = ["Médéric HURIER <github@fmind.dev>"]
readme = "README.md"
license = "CC BY"
keywords = ["mlops", "python", "package"]
packages = [{ include = "bikes", from = "src" }]

# SCRIPTS

[tool.poetry.scripts]
bikes = 'bikes.scripts:main'

# DEPENDENCIES

[tool.poetry.dependencies]
python = "^3.12"
codecarbon = "^2.3.4"
loguru = "^0.7.2"
mlflow-skinny = "^2.11.0"
omegaconf = "^2.3.0"
pandas = "^2.2.1"
pandera = "^0.18.0"
plotly = "^5.19.0"
pyarrow = "^15.0.0"
pydantic = "^2.6.3"
pydantic-settings = "^2.2.1"
scikit-learn = "^1.4.1"
mlflow = "^2.11.0"

[tool.poetry.group.dev.dependencies]
invoke = "^2.2.0"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.4.0"

[tool.poetry.group.checks.dependencies]
bandit = "^1.7.7"
coverage = "^7.4.3"
mypy = "^1.8.0"
pytest = "^8.0.2"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pandera = { extras = ["mypy"], version = "^0.18.0" }
ruff = "^0.3.0"

[tool.poetry.group.commits.dependencies]
commitizen = "^3.16.0"
pre-commit = "^3.6.2"

[tool.poetry.group.carbons.dependencies]
dash = "^2.16.0"
dash-bootstrap-components = "^1.5.0"
fire = "^0.5.0"

[tool.poetry.group.notebooks.dependencies]
ipykernel = "^6.29.3"
nbformat = "^5.9.2"

# CONFIGURATIONS

[tool.bandit]
skips = ["B101"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
changelog_start_rev = "v1.0.0"
update_changelog_on_bump = true
major_version_zero = true

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
strict = true
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
plugins = ["pandera.mypy", "pydantic.mypy"]

[tool.ruff]
fix = true
line-length = 100
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

# SYSTEMS

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
